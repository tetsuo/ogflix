worker_processes 1;

events {
  worker_connections 1024;
}

http {
  server_tokens off;
  include mime.types;
  default_type application/octet-stream;

  gzip               on;
  gzip_comp_level    6;
  gzip_min_length    192;
  gzip_proxied       any;
  gzip_vary          off;
  gzip_types
    application/atom+xml
    application/javascript
    application/x-javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    application/octet-stream
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Xss-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;

  add_header Content-Security-Policy "default-src 'self'; font-src 'self' fonts.gstatic.com; worker-src 'self' blob:; style-src 'self' 'unsafe-inline' *.googleapis.com; img-src 'self' image.tmdb.org data:; script-src 'self' 'unsafe-inline'; frame-src 'self' *.youtube.com;";

  upstream app {
    server host.docker.internal:8000;
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    sendfile             on;

    root /public;

    location / {
      expires max;
      log_not_found off;
      try_files $uri $uri/ $uri.html =404;
    }

    location ~ ^/(results|movie) {
      rewrite ^ /index.html break;
    }

    location /api {
      proxy_pass                http://app;
      proxy_http_version        1.1;
      proxy_buffering           off;
      proxy_request_buffering   off;
      proxy_set_header X-Original-URI \$request_uri;
      proxy_set_header X-Original-Method \$request_method;
      proxy_set_header Host \$host;
      proxy_set_header X-Real-IP \$remote_addr;
      proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto \$scheme;
    }
  }
}

